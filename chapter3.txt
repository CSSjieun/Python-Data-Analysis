데이터에서 손상되거나 부정확한 부분을 수정하고, 불필요한 데이터를 삭제하거나 불완전한 값을 교체하는 등의 작업을 데이터 정제 data cleaning이라고 합니다.
데이터를 분석 목적에 맞게 변환하는 data wrangling 또는 data munging의 일부로 수행될 수 있습니다.

Index 클래스를 비롯하여 판다스 배열 성격의 객체는 어떤 값과 비교할 때 자동으로 배열에 있는 모든 원소와 하나씩 비교해 줍니다.
이를 원소별 비교 element-wise comparison라고 합니다.

# drop() 메서드

# 중복된 행 찾기
판다스 데이터프레임의 중복된 행은 duplicated() 메서드를 사용하여 검사할 수 있습니다.
duplicated() 메서드는 기본적으로 데이터프레임에 있는 모든 열을 기준으로 중복된 행을 찾습니다.

# copy() 메서드
데이터프레임의 복사본을 만듭니다.
unique_rows 배열로 일부 행을 선택하여 만든 ns_book3의 '대출건수'열을 업데이트해야 하기 때문입니다.
판다스는 copy() 메서드를 사용하지 않으면 ns_book3 데이터프레임이 별도의 메모리 공간에 저장되는지 보장하지 않습니다.
따라서 명시적으로 복사하지 않고 '대출건수' 열을 업데이트하면 ns_book의 데이터가 바뀔수도 있습니다.
이런 이유로 판다스에서는 일부 행이나 열을 선택하여 데이터를 업데이트할 때는 항상 복사하는것이 좋습니다.

# 데이터 정제는 수집된 데이터에서 잘못된 부분을 고치거나 제거하여 필요한 데이터를 준비하는 과정입니다.
데이터가 올바르게 정제되지 못하면 분석된 결과를 왜곡시킬 수 있으며 잘못된 의사 결정을 초래하기도 합니다. 

# 누락된 값 바꾸기: loc, fillna() 메소드
누락된 값을 NaN이 아니라 빈 문자열('')로 바꾸겠습니다. 

loc 메서드를 사용하면 누락된 값을 원하는 값으로 바꿀 수 있습니다.
그러면 누락된 값을 가리키는 불리언 배열을 만들어야 하는데, 누락된 값을 확인하는 isna() 메서드로 간단하게 만들 수 있습니다.

isna() 메서드로 '세트 ISBN' 열의 NaN을 가리키는 set_isbn_na_rows 불리언 배열을 만들고, loc 메서드에 전달합니다.

loc 메서드로 NaN을 다른 값으로 바꿀 수 있지만, 더 편리한 방법은 fillna() 메서드 입니다.

# 누락된 값 바꾸기 2: replace() 
replace() 메서드는 NaN은 물론 어떤 값도 바꿀 수 있는 편리한 메서드입니다.

